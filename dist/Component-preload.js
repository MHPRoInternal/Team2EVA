/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "eventManagementEVA/Component-preload",
	"modules": {
		"eventManagementEVA/Component.js": "sap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"eventManagementEVA/model/models\"\n], function(UIComponent, Device, models) {\n\t\"use strict\";\n\n\treturn UIComponent.extend(\"eventManagementEVA.Component\", {\n\n\t\tmetadata: {\n\t\t\tmanifest: \"json\"\n\t\t},\n\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\t \n\t\tinit: function() {\n\t\t\tthis.oUserModel1 = new sap.ui.model.json.JSONModel({\n\t\t\t\tIdUser: \"\",\n\t\t\t\tPassword: \"\"\n\n\t\t\t});\n\t\t\t\n\t\t\tthis.setModel(this.oUserModel1, \"qModel\");\n\t\t\tthis.setModel(this.oUserModel2, \"aModel\");\n\t\t\t\n\t\t\t// call the base component's init function\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\t\t\tthis.getRouter().initialize();\n\t\t\t// set the device model\n\t\t\t//this.setModel(models.createDeviceModel(), \"device\");\n\t\t}\n\t});\n});",
		"eventManagementEVA/controller/BaseController.js": "sap.ui.define([\"sap/ui/core/mvc/Controller\",\r\n\t\"sap/ui/core/routing/History\",\r\n\t\"sap/ui/model/odata/ODataMetadata\",\r\n\t'sap/m/MessageToast',\r\n\t'sap/m/Button',\r\n\t'sap/ui/core/Popup'\r\n\r\n], function(Controller, History, ODataMetadata, MessageToast, Button, Popup) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"eventManagementEVA.controller.BaseController\", {\r\n\t\tonInit: function() {\r\n\r\n\t\t},\r\n\r\n\t\tgetRouter: function() {\r\n\t\t\treturn this.getOwnerComponent().getRouter();\r\n\t\t},\r\n\r\n\t\tonSwitchEditMode: function(oEvent) {\r\n\t\t\tvar bState = oEvent.getSource().getState();\r\n\t\t\tif (bState) {\r\n\t\t\t\tsap.ui.getCore().getConfiguration().setLanguage(\"de\");\r\n\t\t\t} else {\r\n\t\t\t\tsap.ui.getCore().getConfiguration().setLanguage(\"en\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonMenuAction: function(oEvent) {\r\n\r\n\t\t\tvar oItem = oEvent.getParameter(\"item\"),\r\n\t\t\t\tsItemPath = \"\";\r\n\t\t\twhile (oItem instanceof sap.m.MenuItem) {\r\n\t\t\t\tsItemPath = oItem.getText();\r\n\t\t\t\toItem = oItem.getParent();\r\n\t\t\t}\r\n\t\t\tif (sItemPath === \"Change Password\" || sItemPath === \"Passwort Ã¤ndern\") {\r\n\t\t\t\tthis.changePass();\r\n\t\t\t} else if (sItemPath === \"Delete Event\") {\r\n\t\t\t\tvar viewID = this.getView().getId();\r\n\t\t\t\t// console.log(\"The view ID in controller Delete Event is : \" + viewID);\r\n\t\t\t\tvar view = sap.ui.getCore().byId(viewID);\r\n\r\n\t\t\t\t// var deleteEventButton = view.byId(\"deleteEventBtn\");\r\n\t\t\t\t// deleteEventButton.setVisible(true);\r\n\t\t\t\tview.getController().enableDeleteBtns();\r\n\t\t\t} else if (sItemPath === \"Cancel Delete\") {\r\n\t\t\t\tviewID = this.getView().getId();\r\n\t\t\t\tview = sap.ui.getCore().byId(viewID);\r\n\t\t\t\tview.getController().disableDeleteBtns();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tchangePass: function() {\r\n\t\t\tvar viewID = this.getView().getId();\r\n\t\t\tvar oView = sap.ui.getCore().byId(viewID);\r\n\t\t\tvar oDialog = new sap.m.Dialog(\"Dialog1\", {\r\n\t\t\t\ttitle: oView.getModel(\"i18n\").getResourceBundle().getText(\"DialogTitle\"),\r\n\t\t\t\ttype: \"Message\",\r\n\t\t\t\tmodal: true,\r\n\t\t\t\tcontentWidth: \"5rem\",\r\n\t\t\t\tcontent: [new sap.m.Label({\r\n\t\t\t\t\t\ttext: oView.getModel(\"i18n\").getResourceBundle().getText(\"DialogUserName\")\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew sap.m.Input({\r\n\t\t\t\t\t\tmaxLength: 20,\r\n\t\t\t\t\t\tid: \"userName\"\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew sap.m.Label({\r\n\t\t\t\t\t\ttext: oView.getModel(\"i18n\").getResourceBundle().getText(\"DialogPassword\")\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew sap.m.Input({\r\n\t\t\t\t\t\tmaxLength: 20,\r\n\t\t\t\t\t\ttype: \"Password\",\r\n\t\t\t\t\t\tid: \"oldPass\"\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew sap.m.Label({\r\n\t\t\t\t\t\ttext: oView.getModel(\"i18n\").getResourceBundle().getText(\"DialogNewPassword\")\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew sap.m.Input({\r\n\t\t\t\t\t\tmaxLength: 20,\r\n\t\t\t\t\t\ttype: \"Password\",\r\n\t\t\t\t\t\tid: \"newPass\"\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew sap.m.Label({\r\n\t\t\t\t\t\ttext: oView.getModel(\"i18n\").getResourceBundle().getText(\"DialogConfirmPassword\")\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew sap.m.Input({\r\n\t\t\t\t\t\tmaxLength: 20,\r\n\t\t\t\t\t\ttype: 'Password',\r\n\t\t\t\t\t\tid: \"newPassConfirm\",\r\n\t\t\t\t\t\tliveChange: function(oEvent) {\r\n\t\t\t\t\t\t\tvar parent = oEvent.getSource().getParent();\r\n\t\t\t\t\t\t\tparent.getBeginButton().setEnabled(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t],\r\n\r\n\t\t\t\tbeginButton: new Button({\r\n\r\n\t\t\t\t\ttext: \"Submit changes\",\r\n\t\t\t\t\tenabled: false,\r\n\t\t\t\t\tpress: function(oEvent) {\r\n\t\t\t\t\t\tconsole.log(\"Merge1!\");\r\n\t\t\t\t\t\tthis.viewID = this.getView().getId();\r\n\t\t\t\t\t\tthis.view = sap.ui.getCore().byId(this.viewID);\r\n\t\t\t\t\t\tvar userName = sap.ui.getCore().byId(\"userName\").getValue();\r\n\t\t\t\t\t\tvar oldPass = sap.ui.getCore().byId(\"oldPass\").getValue();\r\n\t\t\t\t\t\tvar newPass = sap.ui.getCore().byId(\"newPass\").getValue();\r\n\t\t\t\t\t\tvar newPassConfirm = sap.ui.getCore().byId(\"newPassConfirm\").getValue();\r\n\t\t\t\t\t\tvar oModel = this.view.getModel();\r\n\t\t\t\t\t\tvar oData = {\r\n\t\t\t\t\t\t\tIdUser: userName,\r\n\t\t\t\t\t\t\tPassword: newPass\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\toModel.read(\"/UserSet(IdUser='\" + userName + \"')\", {\r\n\t\t\t\t\t\t\tsuccess: function(oCompleteEntry) {\r\n\t\t\t\t\t\t\t\tif (oCompleteEntry.Password === oldPass) {\r\n\t\t\t\t\t\t\t\t\tif (newPass === newPassConfirm) {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"Merge2!\");\r\n\t\t\t\t\t\t\t\t\t\toModel.update(\"/UserSet(IdUser='\" + userName + \"')\", oData, {\r\n\t\t\t\t\t\t\t\t\t\t\tsuccess: function(oCompletedEntry) {\r\n\t\t\t\t\t\t\t\t\t\t\t\toDialog.close();\r\n\t\t\t\t\t\t\t\t\t\t\t\tMessageToast.show(\"Password change successful for user \" + userName + \"!\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tanimationDuration: 6000\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"SUCCESS?\");\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tMessageToast.show(\"Changes could not be made! Please try again.\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tanimationDuration: 6000\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"ERROR?\");\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tMessageToast.show(\"Invalid username or password! Please try again.\", {\r\n\t\t\t\t\t\t\t\t\t\tanimationDuration: 6000\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\t\t\tMessageToast.show(\"Invalid username or password! Please try again.\", {\r\n\t\t\t\t\t\t\t\t\tanimationDuration: 6000\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tconsole.log(\"ERROR?\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}),\r\n\t\t\t\tendButton: new Button({\r\n\t\t\t\t\ttext: 'Cancel',\r\n\t\t\t\t\tpress: function() {\r\n\t\t\t\t\t\toDialog.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tafterClose: function() {\r\n\t\t\t\t\toDialog.destroy();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsap.ui.getCore().byId('Dialog1').open();\r\n\t\t},\r\n\r\n\t\tonNavBack: function() {\r\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance();\r\n\t\t\tvar sPreviousHash = oHistory.getPreviousHash();\r\n\t\t\tvar viewID = this.getView().getId();\r\n\t\t\tvar oView = sap.ui.getCore().byId(viewID);\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\toModel.refresh(true);\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\twindow.history.go(-1);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tvar oRouter = sap.ui.core.UIComponent.getRouterFor(this);\r\n\t\t\t\toRouter.navTo(\"default\", true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n});",
		"eventManagementEVA/controller/EventCreate.controller.js": "sap.ui.define([\r\n\t\"eventManagementEVA/controller/BaseController\",\r\n\t'sap/ui/core/Element',\r\n\t'sap/m/Input',\r\n\t'sap/m/Label',\r\n\t'sap/m/Select',\r\n\t'sap/m/Button',\r\n\t'sap/m/MessageToast',\r\n\t'sap/ui/unified/FileUploader',\r\n\t'sap/ui/unified/FileUploaderParameter'\r\n], function(BaseController, MessageToast, Label, Select, Button, FileUploaderParameter) {\r\n\t\"use strict\";\r\n\r\n\tvar QAstructList = [];\r\n\tvar countAnswers = 3;\r\n\tvar markers = [];\r\n\tvar counterStruct = 0;\r\n\r\n\treturn BaseController.extend(\"eventManagementEVA.controller.EventCreate\", {\r\n\r\n\t\tonInit: function() {\r\n\t\t\tthis.getRouter().getRoute(\"EventCreate\").attachMatched(this._onRouteMatched, this);\r\n\t\t\tthis.oView = this.getView();\r\n\t\t},\r\n\r\n\t\tonBeforeRendering: function(oEvent) {\r\n\r\n\t\t},\r\n\r\n\t\tonAfterRendering: function(oEvent) {\r\n\t\t\tthis.geocoder = new google.maps.Geocoder();\r\n\t\t\tvar mapOptions = {\r\n\t\t\t\tcenter: new google.maps.LatLng(46.7649352, 23.606376100000034),\r\n\t\t\t\tzoom: 13,\r\n\t\t\t\tmapTypeId: google.maps.MapTypeId.ROADMAP\r\n\t\t\t};\r\n\t\t\tthis.map = new google.maps.Map(this.getView().byId(\"map_canvas\").getDomRef(),\r\n\t\t\t\tmapOptions);\r\n\t\t},\r\n\r\n\t\tonSelect: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tif (oView.byId(\"mailsCheckBox\").getSelected() === true) {\r\n\t\t\t\tvar oEventCreateModel = this.getView().getModel(\"eventModel\");\r\n\t\t\t\toEventCreateModel.setProperty(\"/Mails\", \"\");\r\n\r\n\t\t\t\tvar mailList = oEventCreateModel.getProperty(\"/Mails\");\r\n\t\t\t\toModel.read(\"/UserSet\", {\r\n\t\t\t\t\tsuccess: function(oCompletedEntry) {\r\n\t\t\t\t\t\toCompletedEntry.results.forEach(function(item) {\r\n\t\t\t\t\t\t\tmailList += item.Mail + \"; \" + \"\\n\";\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\toEventCreateModel.setProperty(\"/Mails\", mailList);\r\n\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\toView.byId(\"mailTxtArea\").setValue();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\taddInput: function() {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\t// var oInput1 = new sap.m.Input(oView.createId(\"inputId\" + countAnswers));\r\n\t\t\tvar oInput1 = new sap.m.Input(oView.createId(\"inputId\" + countAnswers), {\r\n\t\t\t\tplaceholder: \"Question option \" + countAnswers + \"...\"\r\n\t\t\t});\r\n\t\t\toInput1.setWidth(\"15.5em\");\r\n\r\n\t\t\tvar delIcon = new sap.ui.core.Icon({\r\n\t\t\t\tsrc: \"sap-icon://delete\",\r\n\t\t\t\tpress: this.onDeleteInput\r\n\t\t\t});\r\n\t\t\tvar inputLayout = new sap.m.FlexBox({\r\n\t\t\t\tid: oView.createId(\"flexBox\" + countAnswers),\r\n\t\t\t\talignItems: \"Center\",\r\n\t\t\t\tjustifyContent: \"Start\",\r\n\t\t\t\titems: [oInput1, delIcon]\r\n\t\t\t});\r\n\t\t\tthis._oPnl.addContent(inputLayout);\r\n\t\t\tcountAnswers += 1;\r\n\t\t},\r\n\r\n\t\taddQuestionPress: function() {\r\n\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar QAstruct = {\r\n\t\t\t\tquestion_text: \"\",\r\n\t\t\t\tanswer_text: [],\r\n\t\t\t\tQAstructId: 0\r\n\t\t\t};\r\n\r\n\t\t\t//for each la fiecare getitems() folosim stuff din sapui5\r\n\t\t\tconsole.log(countAnswers);\r\n\t\t\tvar i = 0;\r\n\t\t\tfor (i = 0; i < countAnswers; i++) {\r\n\t\t\t\tif (oView.byId(\"inputId\" + i)) {\r\n\t\t\t\t\tif ((oView.byId(\"inputId\" + i).getValue()) !== null && (oView.byId(\"inputId\" + i).getValue()) !== \"\") {\r\n\r\n\t\t\t\t\t\tvar k = oView.byId(\"inputId\" + i).getValue();\r\n\t\t\t\t\t\tconsole.log(k);\r\n\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\tQAstruct.QAstructId = counterStruct;\r\n\t\t\t\t\t\t\tQAstruct.question_text = oView.byId(\"inputId\" + i).getValue();\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tQAstruct.answer_text.push(oView.byId(\"inputId\" + i).getValue());\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toView.byId(\"inputId\" + i).setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\toView.byId(\"inputId\" + i).setValueStateText(\"Input is required!\");\r\n\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tQAstructList.push(QAstruct);\r\n\t\t\tcounterStruct++;\r\n\t\t\t//this deletes question input values\r\n\t\t\tfor (i = 0; i < countAnswers; i++) {\r\n\t\t\t\tif (oView.byId(\"inputId\" + i)) {\r\n\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\toView.byId(\"inputId\" + i).setValue();\r\n\t\t\t\t\t\t//oModel.create(\"/Question\" );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toView.byId(\"inputId\" + i).setValue();\r\n\t\t\t\t\t\tif (i >= 3) {\r\n\t\t\t\t\t\t\toView.byId(\"flexBox\" + i).destroy();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//end of deleting values of inputs\r\n\t\t\tvar oLabel = new sap.m.Label({\r\n\t\t\t\ttext: QAstruct.question_text\r\n\t\t\t});\r\n\t\t\tvar oSelect = new sap.m.Select({\r\n\t\t\t\tforceSelection: true\r\n\t\t\t});\r\n\t\t\tQAstruct.answer_text.forEach(function(item) {\r\n\t\t\t\tvar newItem = new sap.ui.core.Item({\r\n\t\t\t\t\tkey: item,\r\n\t\t\t\t\ttext: item\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(item);\r\n\t\t\t\toSelect.addItem(newItem);\r\n\t\t\t});\r\n\t\t\tvar delIcon = new sap.ui.core.Icon({\r\n\t\t\t\tid: \"Del\" + counterStruct,\r\n\t\t\t\tsrc: \"sap-icon://delete\",\r\n\t\t\t\tpress: this.onDeleteQuestion\r\n\t\t\t});\r\n\t\t\tvar QALayout = new sap.m.FlexBox({\r\n\t\t\t\talignItems: \"Center\",\r\n\t\t\t\tjustifyContent: \"Center\",\r\n\t\t\t\titems: [oLabel, oSelect, delIcon]\r\n\t\t\t});\r\n\t\t\tQALayout.addStyleClass(\"sapUiSmallMarginBeginEnd\");\r\n\t\t\tthis.selectPanel.addItem(QALayout);\r\n\t\t\tcountAnswers = 3;\r\n\t\t}, //end of AddQuestion\r\n\r\n\t\tonDeleteInput: function(oEvent) {\r\n\t\t\tvar rowItemContainer = oEvent.getSource().getParent();\r\n\t\t\trowItemContainer.destroy();\r\n\t\t},\r\n\r\n\t\tonDeleteQuestion: function(oEvent) {\r\n\t\t\tvar rowItemContainer = oEvent.getSource().getParent();\r\n\t\t\tconsole.log(oEvent.getSource());\r\n\t\t\tvar questionId = oEvent.getSource().getId().substring(3);\r\n\t\t\tvar removeIndex = null;\r\n\t\t\tQAstructList.forEach(function(index, QAstruct) {\r\n\t\t\t\tif (QAstruct.QAstructId === questionId) {\r\n\t\t\t\t\tremoveIndex = index;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tQAstructList.splice(removeIndex, 1);\r\n\t\t\tconsole.log(questionId);\r\n\t\t\trowItemContainer.destroy();\r\n\t\t},\r\n\r\n\t\tactSearch: function() {\r\n\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar latitude;\r\n\t\t\tvar longitude;\r\n\t\t\tvar map = this.map;\r\n\t\t\tvar address = this.getView().byId(\"Location\").getValue();\r\n\t\t\tmarkers.forEach(function(marker) {\r\n\t\t\t\tmarker.setMap(null);\r\n\t\t\t});\r\n\t\t\tmarkers = [];\r\n\t\t\tthis.geocoder.geocode({\r\n\t\t\t\t'address': address\r\n\t\t\t}, function(results, status) {\r\n\t\t\t\tif (status == google.maps.GeocoderStatus.OK) {\r\n\t\t\t\t\tmap.setCenter(results[0].geometry.location);\r\n\t\t\t\t\tvar marker = new google.maps.Marker({\r\n\t\t\t\t\t\tmap: map,\r\n\t\t\t\t\t\tposition: results[0].geometry.location\r\n\t\t\t\t\t});\r\n\t\t\t\t\tmarkers.push(marker);\r\n\t\t\t\t\tlatitude = results[0].geometry.location.lat();\r\n\t\t\t\t\tlongitude = results[0].geometry.location.lng();\r\n\t\t\t\t\toView.byId(\"Latitude\").setValue(latitude);\r\n\t\t\t\t\toView.byId(\"Longitude\").setValue(longitude);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Geocode was not successful for the following reason: ' + status);\r\n\t\t\t\t\tnew sap.m.MessageToast.show(\"Location could not be found. Please try again.\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tonCreate: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar oEventCreateModel = oView.getModel(\"eventModel\");\r\n\t\t\toEventCreateModel.setProperty(\"/CreatedBy\", this.adminEmail);\r\n\t\t\toModel.refreshSecurityToken();\r\n\t\t\tvar modifiedMailList = oEventCreateModel.getProperty(\"/Mails\").replace(/\\n/g, \"\");\r\n\t\t\toEventCreateModel.setProperty(\"/Mails\", modifiedMailList);\r\n\r\n\t\t\toModel.create(\"/EventSet\", oEventCreateModel.getData(), {\r\n\t\t\t\tsuccess: function(oCompletedEntry) {\r\n\t\t\t\t\tthis.eID = oCompletedEntry.IdEvent;\r\n\t\t\t\t\tvar oFileUploader = oView.byId(\"oFileUploader\");\r\n\t\t\t\t\toFileUploader.setUploadOnChange(false);\r\n\t\t\t\t\toFileUploader.setUseMultipart(false);\r\n\t\t\t\t\toModel.refreshSecurityToken();\r\n\t\t\t\t\toFileUploader.setSendXHR(true);\r\n\t\t\t\t\tvar oHeaders = oModel.oHeaders;\r\n\t\t\t\t\tvar sToken = oHeaders['x-csrf-token'];\r\n\r\n\t\t\t\t\toFileUploader.addHeaderParameter(new sap.ui.unified.FileUploaderParameter({\r\n\t\t\t\t\t\tname: \"x-csrf-token\",\r\n\t\t\t\t\t\tvalue: sToken\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t\toFileUploader.insertHeaderParameter(new sap.ui.unified.FileUploaderParameter({\r\n\t\t\t\t\t\tname: \"slug\",\r\n\t\t\t\t\t\tvalue: oFileUploader.getValue()\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t\toFileUploader.setUploadUrl(\"/destinations/M38/sap/opu/odata/sap/ZTEAM2_SRV/EventSet('\" + this.eID + \"')/toPicture\");\r\n\t\t\t\t\toFileUploader.upload();\r\n\t\t\t\t\tthis.questionCreate();\r\n\r\n\t\t\t\t\tconsole.log(\"Event ID-ul este: \" + oCompletedEntry.IdEvent);\r\n\t\t\t\t\tcounterStruct = 0;\r\n\t\t\t\t\t//sap.m.URLHelper.triggerEmail(mailListString, \"New MHP event invitation!\", inviteText);\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\tconsole.log(\"There has been an error creating the event! Please try again.\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tquestionCreate: function() {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar oQuestionData = \"\";\r\n\t\t\tvar idEvent = this.eID;\r\n\t\t\tQAstructList.forEach(function(item) {\r\n\t\t\t\toQuestionData = {\r\n\t\t\t\t\tIdEvent: idEvent,\r\n\t\t\t\t\tQuestionText: item.question_text\r\n\t\t\t\t};\r\n\r\n\t\t\t\toModel.create(\"/QuestionSet\", oQuestionData, {\r\n\t\t\t\t\tsuccess: function(oCompleteEntry) {\r\n\t\t\t\t\t\titem.answer_text.forEach(function(answer) {\r\n\t\t\t\t\t\t\tvar oAnswerData = {\r\n\t\t\t\t\t\t\t\tIdQuestion: oCompleteEntry.IdQuestion,\r\n\t\t\t\t\t\t\t\tAnswerText: answer\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\toModel.create(\"/PAnswerSet\", oAnswerData, {\r\n\t\t\t\t\t\t\t\tsuccess: function(oCompletEntry) {\r\n\t\t\t\t\t\t\t\t\tnew sap.m.MessageToast.show(\"Event created successfully!\");\r\n\t\t\t\t\t\t\t\t\toModel.setUseBatch(\"false\");\r\n\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\t\t\t\tconsole.log(\"There has been an error creating the event! Please try again.\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t//BaseController.prototype.onNavBack();\r\n\t\t\t\t\t\t//oView.reset();\r\n\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\tconsole.log(\"There has been an error creating the event! Please try again.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_onRouteMatched: function(oEvent) {\r\n\t\t\t\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tthis.adminEmail = oEvent.getParameter(\"arguments\").adminEmailAddress;\r\n\t\t\tthis.usersName = oEvent.getParameter(\"arguments\").nameUser;\r\n\t\t\tconsole.log(\"Email pentru admin este: \" + this.adminEmail);\r\n\t\t\tthis.getView().byId(\"nameLabel\").setText(this.usersName);\r\n\r\n\t\t\tcountAnswers = 3;\r\n\r\n\t\t\tthis._oPnl = this.byId(\"idPnl\");\r\n\t\t\tthis.selectPanel = this.byId(\"selectDisplay\");\r\n\t\t\tthis.byId(\"Date\").setMinDate(new Date());\r\n\r\n\t\t\tvar oEventCreateModel = new sap.ui.model.json.JSONModel({\r\n\t\t\t\tTitle: \"\",\r\n\t\t\t\tLocation: \"\",\r\n\t\t\t\tLatitude: \"\",\r\n\t\t\t\tLongitude: \"\",\r\n\t\t\t\tData: \"\",\r\n\t\t\t\tTime: \"\",\r\n\t\t\t\tDresscode: \"\",\r\n\t\t\t\tMails: \"\",\r\n\t\t\t\tCreatedBy: \"\"\r\n\t\t\t});\r\n\t\t\toView.setModel(oEventCreateModel, \"eventModel\");\r\n\t\t\t//this.createMap();\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"eventManagementEVA/controller/EventDashboard.controller.js": "sap.ui.define([\r\n\t\"eventManagementEVA/controller/BaseController\",\r\n\t'sap/ui/core/Element',\r\n\t'sap/m/MessageToast',\r\n\t'sap/m/Dialog',\r\n\t'sap/m/Button',\r\n\t'sap/m/Text',\r\n\t'eventManagementEVA/model/formatter' \r\n], function(BaseController, Element, MessageToast, Dialog, Button, Text, formatter) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"eventManagementEVA.controller.EventDashboard\", {\r\n\t\tformatter : formatter,\r\n\t\tonInit: function(oEvent) {\r\n\t\t\tthis.getRouter().getRoute(\"EventDashboard\").attachMatched(this._onRouteMatched, this);\r\n\t\t},\r\n\t\t//sap.ui.controller(\"namespace.Controllername\").method();\r\n\r\n\t\tsetStatus: function(oEvent) {\r\n\t\t\tthis.userStatus = this.oView.byId(\"status\").getFooter();\r\n\t\t\tconsole.log(\"User status is: \" + this.userStatus);\r\n\t\t},\r\n\t\t//this ENABLES the delete icons attached to each of the tiles' boxes\r\n\t\tenableDeleteBtns: function() {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\t// var view = sap.ui.getCore().byId(viewID);\r\n\t\t\tvar deleteEventButton = oView.byId(\"deleteEventBtn\");\r\n\t\t\tvar tileBox = oView.byId(\"tileContainer\").getItems();\r\n\t\t\tvar menuItems = oView.byId(\"menuButton\");\r\n\t\t\tmenuItems.getItems()[1].setVisible(false);\r\n\t\t\tmenuItems.getItems()[2].setVisible(true);\r\n\t\t\tdeleteEventButton.setVisible(true);\r\n\t\t\tthis.eventCreateBtn.setVisible(false);\r\n\t\t\ttileBox.forEach(function(item) {\r\n\t\t\t\titem.getItems()[1].setVisible(true);\r\n\t\t\t});\r\n\r\n\t\t},\r\n\t\t//this DISABLES the delete icons attached to each of the tiles' boxes\r\n\t\tdisableDeleteBtns: function() {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar menuItems = oView.byId(\"menuButton\");\r\n\t\t\tmenuItems.getItems()[1].setVisible(true);\r\n\t\t\tmenuItems.getItems()[2].setVisible(false);\r\n\t\t\t// var view = sap.ui.getCore().byId(viewID);\r\n\t\t\tvar deleteEventButton = oView.byId(\"deleteEventBtn\");\r\n\t\t\tvar tileBox = oView.byId(\"tileContainer\").getItems();\r\n\t\t\tthis.eventCreateBtn.setVisible(true);\r\n\t\t\tdeleteEventButton.setVisible(true);\r\n\t\t\ttileBox.forEach(function(item) {\r\n\t\t\t\titem.getItems()[1].setVisible(false);\r\n\t\t\t});\r\n\t\t},\r\n\t\t//function to execute when a tile is pressed\r\n\t\thandlePress: function(oEvent) {\r\n\t\t\tthis.eID = oEvent.getSource().getBindingContext().getObject().IdEvent;\r\n\t\t\tvar userConfirmation = oEvent.getSource().getBindingContext().getObject().Confirmation;\r\n\t\t\tconsole.log(\"Event ID-ul este : \" + this.eID);\r\n\t\t\tconsole.log(\"User ID-ul este : \" + this.uID);\r\n\t\t\tthis.getRouter().navTo(\"EventDetails\", {\r\n\t\t\t\teventID: this.eID,\r\n\t\t\t\tuserID: this.uID,\r\n\t\t\t\tuRole: this.userRole,\r\n\t\t\t\tnameUser: this.usersName,\r\n\t\t\t\tconfirmation: userConfirmation\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tdeleteEvent: function(oEvent) {\r\n\t\t\tthis.viewID = this.getView().getId();\r\n\t\t\tthis.view = sap.ui.getCore().byId(this.viewID);\r\n\t\t\t\r\n\t\t\tconsole.log(\"Event ID-ul in BaseController este: \" + this.eID);\r\n\t\t\t\r\n\t\t\tvar oModel = this.view.getModel();\r\n\r\n\t\t\toModel.remove(\"/EventSet('\" + this.eID + \"')\", {\r\n\t\t\t\tmethod: \"DELETE\",\r\n\t\t\t\tsuccess: function(data) {\r\n\t\t\t\t\tnew MessageToast.show(\"Event has been successfully deleted.\");\r\n\t\t\t\t\t// sap.ui.getCore().byId(\"EventDashboard\").getModel().refresh(true);\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\terror: function(e) {\r\n\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\toModel.refresh(true);\r\n\r\n\t\t},\r\n\r\n\t\tonCreatePress: function(oEvent) {\r\n\t\t\tconsole.log(\"Email-ul adminului este : \" + this.adminEmail);\r\n\t\t\tthis.getRouter().navTo(\"EventCreate\", {\r\n\t\t\t\tadminEmailAddress: this.adminEmail,\r\n\t\t\t\tnameUser: this.usersName\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\tonApproveDialog: function (oEvent) {\r\n\t\t\tthis.eventTitle = oEvent.getSource().getBindingContext().getObject().Title;\r\n\t\t\tthis.eID = oEvent.getSource().getBindingContext().getObject().IdEvent;\r\n\t\t\tvar dialog = new Dialog({\r\n\t\t\t\ttitle: 'Confirm',\r\n\t\t\t\ttype: 'Message',\r\n\t\t\t\tcontent: new Text({ text: \"Are you sure you want to delete the event?\" }),\r\n\t\t\t\tbeginButton: new Button({\r\n\t\t\t\t\ttext: 'Yes',\r\n\t\t\t\t\tpress: function () {\r\n\t\t\t\t\t\tthis.showBusyIndicator(1100, 0);\r\n\t\t\t\t\t\tthis.deleteEvent();\r\n\t\t\t\t\t\tdialog.close();\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}),\r\n\t\t\t\tendButton: new Button({\r\n\t\t\t\t\ttext: 'No',\r\n\t\t\t\t\tpress: function () {\r\n\t\t\t\t\t\tdialog.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tafterClose: function() {\r\n\t\t\t\t\tdialog.destroy();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdialog.open();\r\n\t\t},\r\n\r\n\t\tshowBusyIndicator : function (iDuration, iDelay) {\r\n\t\t\tsap.ui.core.BusyIndicator.show(iDelay);\r\n\r\n\t\t\tif (iDuration && iDuration > 0) {\r\n\t\t\t\tif (this._sTimeoutId) {\r\n\t\t\t\t\tjQuery.sap.clearDelayedCall(this._sTimeoutId);\r\n\t\t\t\t\tthis._sTimeoutId = null;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis._sTimeoutId = jQuery.sap.delayedCall(iDuration, this, function() {\r\n\t\t\t\t\tthis.hideBusyIndicator();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\thideBusyIndicator : function() {\r\n\t\t\tsap.ui.core.BusyIndicator.hide();\r\n\t\t},\r\n\r\n\t\t_onRouteMatched: function(oEvent) {\r\n\t\t\tthis.oView = this.getView();\r\n\t\t\tthis.oModel = this.oView.getModel();\r\n\t\t\tvar oParameter = oEvent.getParameter(\"arguments\");\r\n\t\t\tthis.uID = oParameter.userID;\r\n\t\t\tthis.usersName = oParameter.nameUser;\r\n\t\t\tthis.userRole = oParameter.uRole;\r\n\t\t\tthis.adminEmail = oParameter.adminEmailAddress;\r\n\t\t\tthis.eventCreateBtn = this.oView.byId(\"EventCreateBtn\");\r\n\t\t\tthis.page = this.oView.byId(\"dashboardPage\");\r\n\t\t\t\r\n\t\t\tif (this.userRole === \"true\") {\r\n\t\t\t\tthis.eventCreateBtn.setVisible(true);\r\n\t\t\t} else {\r\n\t\t\t\tvar menuItems = this.oView.byId(\"menuButton\");\r\n\t\t\t\tmenuItems.getItems()[1].setVisible(false);\r\n\t\t\t\tthis.eventCreateBtn.setVisible(false);\r\n\t\t\t}\r\n\t\t\tthis.oView.bindElement({\r\n\t\t\t\tpath: \"/UserSet('\" + this.uID + \"')\",\r\n\t\t\t\tevents: {\r\n\t\t\t\t\tdataReceived: function(oData) {\r\n\t\t\t\t\t\tthis.userStatus = this.oView.byId(\"status\");\r\n\t\t\t\t\t\tconsole.log(\"Confirmation is: \" + this.userStatus);\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t});\r\n});",
		"eventManagementEVA/controller/Login.controller.js": "sap.ui.define([\r\n\t\"eventManagementEVA/controller/BaseController\",\r\n\t'sap/ui/core/Popup',\r\n\t'sap/ui/core/Element',\r\n\t'sap/m/Button',\r\n\t'sap/m/MessageToast'\r\n\r\n], function(BaseController, Popup, Element, Button, MessageToast) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"eventManagementEVA.controller.Login\", {\r\n\r\n\t\tonInit: function() {\r\n\t\t\tthis.viewID = this.getView().getId();\r\n\t\t\tconsole.log(\"This view id is: \" + this.viewID);\r\n\t\t\tthis.oView = this.getView();\r\n\t\t},\r\n\t\t\r\n\t\tonLoginTap: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tthis.oModel = this.oView.getModel();\r\n\t\t\tthis.uid = this.oView.byId(\"uid\").getValue();\r\n\t\t\tthis.pasw = this.oView.byId(\"pasw\").getValue();\r\n\t\t\tthis.route = this.getRouter();\r\n\t\t\t//var oListItem = oEvent.getSource();\r\n\t\t\t// var oBindingContext = oListItem.getBindingContext();\r\n\t\t\t// var userId = oBindingContext.getObject().IdUser;\r\n\t\t\t// var loginSuccess = \"Login Successful! Welcome, \" + uid + \".\";\r\n\t\t\tthis.oModel.read(\"/UserSet(IdUser='\" + this.uid + \"')\", {\r\n\t\t\t\tsuccess: function(oCompleteEntry) {\r\n\t\t\t\t\tconsole.log(\"User role is: \" + oCompleteEntry.Role);\r\n\t\t\t\t\tvar userRole = oCompleteEntry.Role;\r\n\t\t\t\t\tvar adminEmail = oCompleteEntry.Mail;\r\n\t\t\t\t\tvar usersName = oCompleteEntry.Name;\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log(\"Admin name is: \" + oCompleteEntry.Name);\r\n\t\t\t\t\tif (oCompleteEntry.Password === this.pasw) {\r\n\t\t\t\t\t\tMessageToast.show(oView.getModel(\"i18n\").getResourceBundle().getText(\"LoginSuccessMessage\") + \" \" + this.uid + \".\", {\r\n\t\t\t\t\t\t\tanimationDuration: 5000\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// var oUserModel = oThis.getOwnerComponent().getModel(\"userModel\");\r\n\t\t\t\t\t\t// oUserModel.setProperty(\"/IdUser\", oCompleteEntry.IdUser);\r\n\t\t\t\t\t\t// oUserModel.setProperty(\"/Password\", oCompleteEntry.Password);\r\n\t\t\t\t\t\tthis.route.navTo(\"EventDashboard\", {\r\n\t\t\t\t\t\t\tuserID: this.uid,\r\n\t\t\t\t\t\t\tuRole: userRole,\r\n\t\t\t\t\t\t\tadminEmailAddress: adminEmail,\r\n\t\t\t\t\t\t\tnameUser: usersName\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tMessageToast.show(oView.getModel(\"i18n\").getResourceBundle().getText(\"LoginFailedPassword\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\tMessageToast.show(oView.getModel(\"i18n\").getResourceBundle().getText(\"LoginFailedMessage\"));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t},\r\n\t\t// \tvar oModel = new sap.ui.model.odata.v2.ODataModel({\r\n\t\t// \t\tserviceUrl: \"http://services.odata.org/Northwind/Northwind.svc\",\r\n\t\t// \t\tmetadataUrlParams: {\r\n\t\t// \t\t\tID_USER: \"{uid}\",\r\n\t\t// \t\t\tPASSWORD: \"{pasw}\"\r\n\t\t// \t\t}\r\n\t\t// \t});\r\n\t\t// \r\n\r\n\t\tchangePass: function() {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oDialog = new sap.m.Dialog(\"Dialog1\", {\r\n\t\t\t\ttitle: oView.getModel(\"i18n\").getResourceBundle().getText(\"DialogTitle\"),\r\n\t\t\t\ttype: \"Message\",\r\n\t\t\t\tmodal: true,\r\n\t\t\t\tcontentWidth: \"5rem\",\r\n\t\t\t\tcontent: [new sap.m.Label({\r\n\t\t\t\t\t\ttext: oView.getModel(\"i18n\").getResourceBundle().getText(\"DialogUserName\")\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew sap.m.Input({\r\n\t\t\t\t\t\tmaxLength: 20, \r\n\t\t\t\t\t\tid: \"userName\"\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew sap.m.Label({\r\n\t\t\t\t\t\ttext: oView.getModel(\"i18n\").getResourceBundle().getText(\"DialogPassword\")\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew sap.m.Input({\r\n\t\t\t\t\t\tmaxLength: 20,\r\n\t\t\t\t\t\ttype: \"Password\",\r\n\t\t\t\t\t\tid: \"oldPass\"\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew sap.m.Label({\r\n\t\t\t\t\t\ttext: oView.getModel(\"i18n\").getResourceBundle().getText(\"DialogNewPassword\")\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew sap.m.Input({\r\n\t\t\t\t\t\tmaxLength: 20,\r\n\t\t\t\t\t\ttype: \"Password\",\r\n\t\t\t\t\t\tid: \"newPass\"\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew sap.m.Label({\r\n\t\t\t\t\t\ttext: oView.getModel(\"i18n\").getResourceBundle().getText(\"DialogConfirmPassword\")\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew sap.m.Input({\r\n\t\t\t\t\t\tmaxLength: 20,\r\n\t\t\t\t\t\ttype: 'Password',\r\n\t\t\t\t\t\tid: \"newPassConfirm\",\r\n\t\t\t\t\t\tliveChange: function(oEvent) {\r\n\t\t\t\t\t\t\tvar parent = oEvent.getSource().getParent();\r\n\t\t\t\t\t\t\tparent.getBeginButton().setEnabled(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t],\r\n\r\n\t\t\t\tbeginButton: new Button({\r\n\r\n\t\t\t\t\ttext: \"Submit changes\",\r\n\t\t\t\t\tenabled: false,\r\n\t\t\t\t\tpress: function(oEvent) {\r\n\t\t\t\t\t\tconsole.log(\"Merge1!\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.view = sap.ui.getCore().byId(this.viewID);\r\n\t\t\t\t\t\tvar userName = sap.ui.getCore().byId(\"userName\").getValue();\r\n\t\t\t\t\t\tvar oldPass = sap.ui.getCore().byId(\"oldPass\").getValue();\r\n\t\t\t\t\t\tvar newPass = sap.ui.getCore().byId(\"newPass\").getValue();\r\n\t\t\t\t\t\tvar newPassConfirm = sap.ui.getCore().byId(\"newPassConfirm\").getValue();\r\n\t\t\t\t\t\tvar oModel = this.view.getModel();\r\n\t\t\t\t\t\tvar oData = {\r\n\t\t\t\t\t\t\tIdUser: userName,\r\n\t\t\t\t\t\t\tPassword: newPass\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\toModel.read(\"/UserSet(IdUser='\" + userName + \"')\", {\r\n\t\t\t\t\t\t\tsuccess: function(oCompleteEntry) {\r\n\t\t\t\t\t\t\t\tif (oCompleteEntry.Password === oldPass) {\r\n\t\t\t\t\t\t\t\t\tif (newPass === newPassConfirm) {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"Merge2!\");\r\n\t\t\t\t\t\t\t\t\t\toModel.update(\"/UserSet(IdUser='\" + userName + \"')\", oData, {\r\n\t\t\t\t\t\t\t\t\t\t\tsuccess: function(oCompletedEntry) {\r\n\t\t\t\t\t\t\t\t\t\t\t\toDialog.close();\r\n\t\t\t\t\t\t\t\t\t\t\t\tMessageToast.show(oView.getModel(\"i18n\").getResourceBundle().getText(\"ChangePasswordSucces\") + userName + \"!\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tanimationDuration: 6000\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"SUCCESS?\");\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tMessageToast.show(oView.getModel(\"i18n\").getResourceBundle().getText(\"ChangePasswordFailed\"), {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tanimationDuration: 6000\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"ERROR?\");\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tMessageToast.show(oView.getModel(\"i18n\").getResourceBundle().getText(\"WrongPasswordDialog\"), {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tanimationDuration: 6000\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\t\t\tMessageToast.show(oView.getModel(\"i18n\").getResourceBundle().getText(\"WrongPasswordMatchDialog\"), {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tanimationDuration: 6000\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tconsole.log(\"ERROR?\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}),\r\n\t\t\t\tendButton: new Button({\r\n\t\t\t\t\ttext: 'Cancel',\r\n\t\t\t\t\tpress: function() {\r\n\t\t\t\t\t\toDialog.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tafterClose: function() {\r\n\t\t\t\t\toDialog.destroy();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsap.ui.getCore().byId('Dialog1').open();\r\n\t\t}\r\n\t});\r\n\r\n});",
		"eventManagementEVA/controller/EventDetails.controller.js": "sap.ui.define([\r\n\t\"eventManagementEVA/controller/BaseController\",\r\n\t'sap/ui/core/Element',\r\n\t'sap/m/MessageToast',\r\n\t'sap/m/Dialog',\r\n\t'sap/m/Button',\r\n\t'sap/m/Text'\r\n\r\n], function(BaseController, Element, MessageToast, Dialog, Button, Text) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"eventManagementEVA.controller.EventDetails\", {\r\n\r\n\t\tonInit: function(oEvent) {\r\n\t\t\t\r\n\t\t\tthis.getRouter().getRoute(\"EventDetails\").attachMatched(this._onRouteMatched, this);\r\n\r\n\t\t},\r\n\r\n\t\tonAfterRendering: function(oEvent) {\r\n\t\t\tthis.viewSwitchStateModel = this.getView().getModel(\"switchStateModel\");\r\n\t\t\tthis.viewSwitchStateModel.getProperty(\"/Editable\");\r\n\t\t\tthis.viewSwitchStateModel.getProperty(\"/Visible\");\r\n\t\t},\r\n\r\n\t\tactSearch: function() {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar latitude;\r\n\t\t\tvar longitude;\r\n\t\t\tvar map = this.map;\r\n\t\t\tvar address = this.getView().byId(\"Location\").getValue();\r\n\t\t\tthis.markers.forEach(function(marker) {\r\n\t\t\t\tmarker.setMap(null);\r\n\t\t\t});\r\n\t\t\tthis.markers = [];\r\n\t\t\tthis.geocoder.geocode({\r\n\t\t\t\t'address': address\r\n\t\t\t}, function(results, status) {\r\n\t\t\t\tif (status == google.maps.GeocoderStatus.OK) {\r\n\t\t\t\t\tmap.setCenter(results[0].geometry.location);\r\n\t\t\t\t\tvar marker = new google.maps.Marker({\r\n\t\t\t\t\t\tmap: map,\r\n\t\t\t\t\t\tposition: results[0].geometry.location\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.markers.push(marker);\r\n\t\t\t\t\tlatitude = results[0].geometry.location.lat();\r\n\t\t\t\t\tlongitude = results[0].geometry.location.lng();\r\n\t\t\t\t\toView.byId(\"Latitude\").setValue(latitude);\r\n\t\t\t\t\toView.byId(\"Longitude\").setValue(longitude);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Geocode was not successful for the following reason: ' + status);\r\n\t\t\t\t\tnew sap.m.MessageToast.show(\"Location could not be found. Please try again.\");\r\n\t\t\t\t}\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\tonSwitchEditMode: function(oEvent) {\r\n\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tthis.latitude = oView.byId(\"Latitude\").getValue();\r\n\t\t\tthis.longitude = oView.byId(\"Longitude\").getValue();\r\n\r\n\t\t\tvar state = this.switchBtn.getState();\r\n\t\t\tthis.viewSwitchStateModel.setProperty(\"/Editable\", state);\r\n\t\t\tthis.viewSwitchStateModel.setProperty(\"/Visible\", state);\r\n\t\t},\r\n\r\n\t\tonSelectChange: function(oEvent) {\r\n\t\t\tvar flag = this.acceptBtn.getVisible();\r\n\t\t\tif(flag === false){\r\n\t\t\t\tthis.updateBtn.setEnabled(true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonUpdateQuestionsTap: function(oEvent) {\r\n\t\t\tvar selectList = [];\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar questionBox = oView.byId(\"questionBox\");\r\n\t\t\t//var counter = questionBox.getItems().length;\r\n\t\t\tvar getItems = questionBox.getItems();\r\n\t\t\tconsole.log(\"Asta ia getItems(): \" + getItems);\r\n\t\t\t// var questionID = this.getSource().getBindingContext().getObject().IdQuestion;\r\n\t\t\t// console.log();\r\n\t\t\t// var answerSelect = oEvent.getParameters().selectedItem.getText();\r\n\t\t\t// console.log(\"ID-ul question-ului in EventDetails este: \" + questionID);\r\n\t\t\tvar userID = this.uID;\r\n\t\t\tvar eventID = this.eID;\r\n\t\t\t// console.log(\"answer LIST este: \" + this.questionAnswerList);\r\n\t\t\tquestionBox.getItems().forEach(function(item) {\r\n\t\t\t\tif (item.getItems()[1].getSelectedItem() !== null) {\r\n\t\t\t\t\tvar answerSelect = item.getItems()[1].getSelectedItem().getText();\r\n\t\t\t\t\tvar questionID = item.getBindingContext().getObject().IdQuestion;\r\n\t\t\t\t\titem.getItems()[1].setValueState(sap.ui.core.ValueState.None);\r\n\r\n\t\t\t\t\tconsole.log(\"ID-ul question-ului este: \" + questionID);\r\n\t\t\t\t\tvar questionAnswerList = {\r\n\t\t\t\t\t\tIdQuestion: questionID,\r\n\t\t\t\t\t\tAnswerText: answerSelect\r\n\t\t\t\t\t};\r\n\t\t\t\t\tselectList.push(questionAnswerList);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnew MessageToast.show(\"Please do not leave answers empty.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tselectList.forEach(function(items) {\r\n\t\t\t\tvar questionAnswerCreateList = {\r\n\t\t\t\t\tIdQuestion: items.IdQuestion,\r\n\t\t\t\t\tIdUser: userID,\r\n\t\t\t\t\tIdEvent: eventID,\r\n\t\t\t\t\tAnswerText: items.AnswerText\r\n\t\t\t\t};\r\n\t\t\t\toModel.create(\"/AnswerSet\", questionAnswerCreateList, {\r\n\t\t\t\t\tsuccess: function(oCompleteEntry) {\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(oError) {}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\toModel.refresh(true);\r\n\t\t},\r\n\r\n\t\tonAcceptTap: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar questionBox = oView.byId(\"questionBox\");\r\n\t\t\tquestionBox.getItems().forEach(function(item) {\r\n\t\t\t\tif (item.getItems()[1].getSelectedItem() === null || item.getItems()[1].getSelectedItem() === \"\") {\r\n\t\t\t\t\titem.getItems()[1].setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\tnew MessageToast.show(\"Please do not leave answers empty.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\titem.getItems()[1].setValueState(sap.ui.core.ValueState.None);\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t\tthis.acceptUpdate();\r\n\t\t},\r\n\r\n\t\tacceptUpdate: function(oEvent) {\r\n\t\t\t//this.updateBtn.setEnabled(true);\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar confirmation = \"Y\";\r\n\t\t\tvar oData = {\r\n\t\t\t\tConfirmation: confirmation\r\n\t\t\t};\r\n\r\n\t\t\toModel.update(\"/UserEventSet(IdUser='\" + this.uID + \"',IdEvent='\" + this.eID + \"')\", oData, {\r\n\t\t\t\tsuccess: function(oCompletedEntry) {\r\n\t\t\t\t\toView.byId(\"acceptBtn\").setEnabled(false);\r\n\t\t\t\t\toView.byId(\"declineBtn\").setEnabled(true);\r\n\t\t\t\t\toView.byId(\"declineBtn\").setVisible(true);\r\n\t\t\t\t\tMessageToast.show(\"Event attendance confirmed for user \" + this.uID + \"!\", {\r\n\r\n\t\t\t\t\t\tanimationDuration: 5000\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(\"SUCCESS?\");\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\tMessageToast.show(\"Changes could not be made! Please try again.\");\r\n\t\t\t\t\tconsole.log(\"ERROR?\");\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\t\t\tthis.onUpdateQuestionsTap();\r\n\t\t},\r\n\r\n\t\tonDeclineTap: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar confirmation = \"N\";\r\n\t\t\tvar oData = {\r\n\t\t\t\tConfirmation: confirmation\r\n\t\t\t};\r\n\t\t\toModel.update(\"/UserEventSet(IdUser='\" + this.uID + \"',IdEvent='\" + this.eID + \"')\", oData, {\r\n\t\t\t\tsuccess: function(oCompletedEntry) {\r\n\t\t\t\t\toView.byId(\"declineBtn\").setEnabled(false);\r\n\t\t\t\t\toView.byId(\"acceptBtn\").setEnabled(true);\r\n\t\t\t\t\toView.byId(\"acceptBtn\").setVisible(true);\r\n\t\t\t\t\t//this.updateBtn.setEnabled(true);\r\n\r\n\t\t\t\t\tMessageToast.show(\"Event attendance confirmed for user \" + this.uID + \"!\", {\r\n\r\n\t\t\t\t\t\tanimationDuration: 5000\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(\"SUCCESS?\");\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\tMessageToast.show(\"Changes could not be made! Please try again.\");\r\n\t\t\t\t\tconsole.log(\"ERROR?\");\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tonUpdatePress: function(oEvent) {\r\n\t\t\tvar switchState = this.switchBtn.getState();\r\n\t\t\tif (switchState === true) {\r\n\t\t\t\tvar dialog = new Dialog({\r\n\t\t\t\t\ttitle: 'Confirm',\r\n\t\t\t\t\ttype: 'Message',\r\n\t\t\t\t\tcontent: new Text({\r\n\t\t\t\t\t\ttext: \"Would you like to send update notifications?\"\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tbeginButton: new Button({\r\n\t\t\t\t\t\ttext: 'Yes',\r\n\t\t\t\t\t\tpress: function() {\r\n\t\t\t\t\t\t\tthis.sendUpdates = true;\r\n\t\t\t\t\t\t\tthis.onAdminUpdate();\r\n\t\t\t\t\t\t\tdialog.close();\r\n\t\t\t\t\t\t}.bind(this)\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tendButton: new Button({\r\n\t\t\t\t\t\ttext: 'No',\r\n\t\t\t\t\t\tpress: function() {\r\n\t\t\t\t\t\t\tthis.onAdminUpdate();\r\n\t\t\t\t\t\t\tdialog.close();\r\n\t\t\t\t\t\t}.bind(this)\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tafterClose: function() {\r\n\t\t\t\t\t\tdialog.destroy();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tdialog.open();\r\n\t\t\t} else {\r\n\t\t\t\tthis.onUpdateQuestionsTap();\r\n\t\t\t}\r\n\t\t\t// var updateBtn = this.getView().byId(\"eventUpdate\");\r\n\t\t\t// var deleteBtn = this.getView().byId(\"eventDelete\");\r\n\t\t\t// var switchBtn = this.getView().byId(\"switchBtn\");\r\n\t\t\t// switchBtn.setState(false);\r\n\t\t\t// updateBtn.setVisible(false);\r\n\t\t\t// deleteBtn.setVisible(false);\r\n\t\t\t// oModel.setUseBatch(\"true\");\r\n\t\t\t// oModel.submitChanges({\r\n\t\t\t// \tsuccess: jQuery.proxy(function() {\r\n\t\t\t// \t\tnew sap.m.MessageToast.show(\"Changes successfully saved!\");\r\n\t\t\t// \t}, this),\r\n\t\t\t// \terror: jQuery.proxy(function() {\r\n\t\t\t// \t\toModel.setUseBatch(false);\r\n\t\t\t// \t\tnew sap.m.MessageToast.show(\"Error saving changes!\");\r\n\r\n\t\t\t// \t}, this)\r\n\t\t\t// });\r\n\r\n\t\t},\r\n\t\tonAdminUpdate: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar title = oView.byId(\"Title\").getValue();\r\n\t\t\tvar location = oView.byId(\"Location\").getValue();\r\n\t\t\tvar latitude = oView.byId(\"Latitude\").getValue();\r\n\t\t\tvar longitude = oView.byId(\"Longitude\").getValue();\r\n\t\t\tvar date = oView.byId(\"Date\").getValue() + \"T00:00:00\";\r\n\t\t\tvar time = oView.byId(\"Time\").getValue();\r\n\t\t\tvar dressCode = oView.byId(\"Dresscode\").getValue();\r\n\r\n\t\t\tvar oData = {\r\n\t\t\t\tTitle: title,\r\n\t\t\t\tLocation: location,\r\n\t\t\t\tLatitude: latitude,\r\n\t\t\t\tLongitude: longitude,\r\n\t\t\t\tData: date,\r\n\t\t\t\tTime: time,\r\n\t\t\t\tDresscode: dressCode,\r\n\t\t\t\tCreatedBy: this.adminEmail,\r\n\t\t\t\tSendUpdates: this.sendUpdates\r\n\t\t\t};\r\n\t\t\tconsole.log(\"ID eventului este: \" + this.eID);\r\n\t\t\toModel.update(\"/EventSet(IdEvent='\" + this.eID + \"')\", oData, {\r\n\t\t\t\tsuccess: function(oCompletedEntry) {\r\n\t\t\t\t\tthis.switchBtn.setState(false);\r\n\t\t\t\t\tthis.onUpdateQuestionsTap();\r\n\r\n\t\t\t\t\tMessageToast.show(\"Update successful!\", {\r\n\r\n\t\t\t\t\t\tanimationDuration: 5000\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(\"SUCCESS UPDATE?\");\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\tMessageToast.show(\"Changes could not be made! Please try again.\");\r\n\t\t\t\t\tconsole.log(\"ERROR UPDATE?\");\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis.viewSwitchStateModel.setProperty(\"/Editable\", false);\r\n\t\t\tthis.viewSwitchStateModel.setProperty(\"/Visible\", false);\r\n\t\t},\r\n\r\n\t\tonApproveNotificationDialog: function(oEvent) {\r\n\t\t\tvar dialog = new Dialog({\r\n\t\t\t\ttitle: 'Confirm',\r\n\t\t\t\ttype: 'Message',\r\n\t\t\t\tcontent: new Text({\r\n\t\t\t\t\ttext: \"Are you sure you want to update the event?\"\r\n\t\t\t\t}),\r\n\t\t\t\tbeginButton: new Button({\r\n\t\t\t\t\ttext: 'Yes',\r\n\t\t\t\t\tpress: function() {\r\n\t\t\t\t\t\tthis.onUpdatePress();\r\n\t\t\t\t\t\tdialog.close();\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}),\r\n\t\t\t\tendButton: new Button({\r\n\t\t\t\t\ttext: 'No',\r\n\t\t\t\t\tpress: function() {\r\n\t\t\t\t\t\tdialog.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tafterClose: function() {\r\n\t\t\t\t\tdialog.destroy();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdialog.open();\r\n\t\t},\r\n\r\n\t\ttransformEmail: function() {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar adminCreatedByEmail = this.adminEmail;\r\n\r\n\t\t\tvar indexDot = adminCreatedByEmail.indexOf(\".\");\r\n\t\t\tvar firstName = adminCreatedByEmail.substr(0, indexDot);\r\n\t\t\tvar createdByFirstName = firstName.charAt(0).toUpperCase() + firstName.slice(1);\r\n\r\n\t\t\tvar indexAtSign = adminCreatedByEmail.indexOf(\"@\");\r\n\t\t\tvar lastName = adminCreatedByEmail.substr(indexDot + 1, indexAtSign - indexDot - 1);\r\n\t\t\tvar createdByLastName = lastName.charAt(0).toUpperCase() + lastName.slice(1);\r\n\r\n\t\t\toView.byId(\"createdBy\").setText(\"Event created by \" + createdByFirstName + \" \" + createdByLastName);\r\n\t\t},\r\n\r\n\t\t_onRouteMatched: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tthis.eID = oEvent.getParameter(\"arguments\").eventID;\r\n\t\t\tthis.uID = oEvent.getParameter(\"arguments\").userID;\r\n\t\t\tthis.usersName = oEvent.getParameter(\"arguments\").nameUser;\r\n\t\t\tthis.getView().byId(\"nameLabel\").setText(this.usersName);\r\n\t\t\tthis.userRole = oEvent.getParameter(\"arguments\").uRole;\r\n\t\t\tthis.userConfirmation = oEvent.getParameter(\"arguments\").confirmation;\r\n\t\t\tthis.acceptBtn = oView.byId(\"acceptBtn\");\r\n\t\t\tthis.declineBtn = oView.byId(\"declineBtn\");\r\n\t\t\tthis.switchBtn = oView.byId(\"switchBtn\");\r\n\t\t\t\r\n\t\t\tthis.getView().byId(\"map_canvas\").addStyleClass(\"myMap\");\r\n\t\t\tthis.updateBtn = oView.byId(\"eventUpdate\");\r\n\t\t\tthis.currentUserLabel = oView.byId(\"userNameLabelTop\");\r\n\t\t\tthis.switchBtn = oView.byId(\"switchBtn\");\r\n\t\t\tthis.sendUpdates = false;\r\n\t\t\tthis.byId(\"Date\").setMinDate(new Date());\r\n\t\t\tthis.markers = [];\r\n\r\n\t\t\tthis.oSwitchStateModel = new sap.ui.model.json.JSONModel({\r\n\t\t\t\tEditable: false,\r\n\t\t\t\tVisible: false\r\n\t\t\t});\r\n\t\t\toView.setModel(this.oSwitchStateModel, \"switchStateModel\");\r\n\r\n\t\t\tif (this.userRole === \"true\") {\r\n\t\t\t\tthis.acceptBtn.setVisible(false);\r\n\t\t\t\tthis.declineBtn.setVisible(false);\r\n\t\t\t\tthis.switchBtn.setState(false);\r\n\t\t\t} else if (this.userRole === \"false\") {\r\n\t\t\t\tthis.switchBtn.setVisible(false);\r\n\t\t\t\tthis.switchBtn.setEnabled(false);\r\n\r\n\t\t\t\tif (this.userConfirmation === \"Y\") {\r\n\t\t\t\t\t//this.updateBtn.setEnabled(true);\r\n\t\t\t\t\tthis.acceptBtn.setVisible(false);\r\n\t\t\t\t\tthis.declineBtn.setVisible(true);\r\n\t\t\t\t} else if(this.userConfirmation === \"N\") {\r\n\t\t\t\t\tthis.updateBtn.setEnabled(false);\r\n\t\t\t\t\tthis.acceptBtn.setVisible(true);\r\n\t\t\t\t\tthis.acceptBtn.setEnabled(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\"1 \" + this.eID);\r\n\t\t\t//\tvar oUserModel = this.getOwnerComponent().getModel(\"userModel\");\r\n\t\t\t//console.log(oUserModel.getProperty(\"/IdUser\") + \"S-a transmit si getproperty!\");\r\n\t\t\t// var oModel = oView.getModel();\r\n\t\t\t// console.log(\"3 \" + eID);\r\n\t\t\toView.bindElement({\r\n\t\t\t\tpath: \"/EventSet('\" + this.eID + \"')\",\r\n\t\t\t\tevents: {\r\n\t\t\t\t\tdataReceived: function(oData) {\r\n\t\t\t\t\t\tvar myLatlng = new google.maps.LatLng(oData.getParameters().data.Latitude, oData.getParameters().data.Longitude);\r\n\t\t\t\t\t\tvar mapOptions = {\r\n\t\t\t\t\t\t\tzoom: 15,\r\n\t\t\t\t\t\t\tcenter: myLatlng\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.map = new google.maps.Map(oView.byId(\"map_canvas\").getDomRef(), mapOptions);\r\n\t\t\t\t\t\tthis.geocoder = new google.maps.Geocoder();\r\n\t\t\t\t\t\tvar marker = new google.maps.Marker({\r\n\t\t\t\t\t\t\tposition: myLatlng,\r\n\t\t\t\t\t\t\ttitle: \"Event location\"\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tconsole.log(\"oData createdBy data is: \" + oData.getParameters().data.CreatedBy);\r\n\t\t\t\t\t\t// To add the marker to the map, call setMap();\r\n\t\t\t\t\t\tmarker.setMap(this.map);\r\n\t\t\t\t\t\tthis.markers.push(marker);\r\n\t\t\t\t\t\tthis.adminEmail = oData.getParameters().data.CreatedBy;\r\n\t\t\t\t\t\tthis.transformEmail();\r\n\t\t\t\t\t\tthis._checkEventDate(oData.getParameters().data.Data);\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_checkEventDate: function(eventDate) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar todayDate = new Date();\r\n\t\t\ttodayDate.setHours(0, 0, 0, 0);\r\n\t\t\teventDate.setHours(0, 0, 0, 0);\r\n\t\t\tvar diff = eventDate.getTime() - todayDate.getTime();\r\n\t\t\tif (diff >= 0) {\r\n\t\t\t\tvar daysRemaining = parseInt(diff / (1000 * 60 * 60 * 24));\r\n\t\t\t\tif (daysRemaining < 7) {\r\n\t\t\t\t\t//oView.byId(\"eventUpdate\").setVisible(false);     \r\n\t\t\t\t\tthis.acceptBtn.setVisible(false);\r\n\t\t\t\t\tthis.declineBtn.setVisible(false);\r\n\t\t\t\t\tthis.switchBtn.setVisible(false);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.updateBtn.setVisible(false);\r\n\t\t\t\toView.byId(\"eventUpdate\").setVisible(false);\r\n\t\t\t\tthis.acceptBtn.setVisible(false);\r\n\t\t\t\tthis.declineBtn.setVisible(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"eventManagementEVA/view/qCreate.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:l=\"sap.ui.layout\" xmlns:core=\"sap.ui.core\">\n\t<Panel id=\"idPnl\">\n\t\t<FlexBox id=\"idFB\" alignItems=\"Center\" justifyContent=\"Start\">\n\t\t\t<items>\n\t\t\t\t<HBox>\n\t\t\t\t\t<VBox class=\"questionCreateBox\">\n\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t<Label text=\"{i18n>QuestionLabel}\"/>\n\t\t\t\t\t\t\t<Input id=\"inputId0\" placeholder=\"{i18n>QuestionText}\"/>\n\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t<Label text=\"{i18n>QuestionOptions}\"/>\n\t\t\t\t\t\t\t<Button id=\"addInput\" text=\"{i18n>OptionAdd}\" icon=\"sap-icon://sys-add\" type=\"Transparent\" press=\"addInput\"/>\n\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t<Input width=\"15.5em\" id=\"inputId1\" placeholder=\"Question option 1...\"/>\n\t\t\t\t\t\t\t<Input width=\"15.5em\" id=\"inputId2\" placeholder=\"Question option 2...\"/>\n\t\t\t\t\t\t</VBox>\n\t\t\t\t\t</VBox>\n\t\t\t\t</HBox>\n\t\t\t</items>\n\t\t</FlexBox>\n\t</Panel>\n</core:FragmentDefinition>",
		"eventManagementEVA/view/eventQAlist.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\" xmlns:core=\"sap.ui.core\" xmlns:core=\"sap.ui.core.mvc\">\n\t<Panel width=\"150em\">\n\t\t\n\t</Panel>\n</core:FragmentDefinition>",
		"eventManagementEVA/view/EventDashboard.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:l=\"sap.ui.layout\" xmlns:f=\"sap.ui.layout.form\" xmlns=\"sap.m\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\" controllerName=\"eventManagementEVA.controller.EventDashboard\">\n\t<Page title=\"{i18n>DashTitle}\" id=\"dashboardPage\" contentOnlyBusy=\"true\">\n\t\t<customHeader class=\"headerContent\">\n\t\t\t<Toolbar>\n\t\t\t\t<Button type=\"Back\" press=\"onNavBack\"/>\n\t\t\t\t<Image src=\"/webapp/resources/mhplogo.jpg\" height=\"4.5em\" width=\"9em\" densityAware=\"true\"></Image>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<Label text=\" {Name} \"></Label>\n\t\t\t\t<MenuButton icon=\"sap-icon://action-settings\" type=\"Accept\" defaultAction=\"onDefaultActionAccept\" useDefaultActionOnly=\"true\">\n\t\t\t\t\t<menu>\n\t\t\t\t\t\t<Menu id=\"menuButton\" itemSelected=\"onMenuAction\">\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<MenuItem id=\"changePasswordItem\" text=\"Change Password\" icon=\"sap-icon://private\"/>\n\t\t\t\t\t\t\t\t<MenuItem id=\"deleteEventItem\" text=\"Delete Event\" icon=\"sap-icon://private\"/>\n\t\t\t\t\t\t\t\t<MenuItem id=\"cancelDeleteItem\" visible=\"false\" text=\"Cancel Delete\" icon=\"sap-icon://sys-cancel\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t</menu>\n\t\t\t\t</MenuButton>\n\t\t\t</Toolbar>\n\t\t</customHeader>\n\t\t<FlexBox id=\"tileContainer\" class=\"sapUiLargelMargin columns\" items=\"{toUserEvent}\" wrap=\"Wrap\" justifyContent=\"Center\">\n\t\t\t<VBox class=\"sapUiLargeMarginBegin sapUiMediumMargin genericTileBox\">\n\t\t\t\t<FlexBox>\n\t\t\t\t\t<!--<CheckBox id=\"tileSelect\" selected=\"false\" select=\"onTileSelect\"/>-->\n\t\t\t\t\t<GenericTile id=\"genericTile\" class=\"tileLayout customTile\" header=\"{Title}\"\n\t\t\t\t\t\theaderImage=\"{= ${Confirmation} === 'P' ? 'sap-icon://alert' : ''}\" press=\"handlePress\"\n\t\t\t\t\t\tsubheader=\"{parts:[{path:'Data', type:'sap.ui.model.type.Date', formatOptions: {pattern: 'YYYY-MM-dd'}}, {path: 'Data', formatter: '.formatter.calculateDaysRemaining'} ]}\">\n\t\t\t\t\t\t<TileContent id=\"status\" class=\"tileImage\"\n\t\t\t\t\t\t\tfooter=\"{= ${Confirmation} === 'P' ? 'Pending' : ${Confirmation} === 'Y' ? 'Accepted' : 'Declined'}\"\n\t\t\t\t\t\t\tfooterColor=\"{= ${Confirmation} === 'P' ? 'Critical' : ${Confirmation} === 'Y' ? 'Good' : 'Error'}\">\n\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t<ImageContent id=\"eventPicture\" src=\"/destinations/M38/sap/opu/odata/sap/ZTEAM2_SRV/EPictureSet('{IdEvent}')/$value\"/>\n\t\t\t\t\t\t\t\t<!--<FeedContent contentText=\"Days left: \" subheader=\"Subheader\" value=\"9\"/>-->\n\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t</TileContent>\n\t\t\t\t\t</GenericTile>\n\t\t\t\t</FlexBox>\n\t\t\t\t<Button class=\"actionBtn\" id=\"deleteEventBtn\" icon=\"sap-icon://delete\" tooltip=\"Delete this event\" press=\"onApproveDialog\" visible=\"false\"/>\n\t\t\t</VBox>\n\t\t</FlexBox>\n\t\t<footer>\n\t\t\t<Toolbar>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<Button class=\"EventCreateBtn\" id=\"EventCreateBtn\" visible=\"false\" width=\"7rem\" text=\"{i18n>CreateEventBtn}\" type=\"Unstyled\"\n\t\t\t\t\tpress=\"onCreatePress\"></Button>\n\t\t\t</Toolbar>\n\t\t</footer>\n\t</Page>\n</mvc:View>",
		"eventManagementEVA/view/mailTextArea.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:l=\"sap.ui.layout\" xmlns:core=\"sap.ui.core\">\n\t<FlexBox id=\"idFB2\" alignItems=\"Center\" justifyContent=\"Start\">\n\t\t<items>\n\t\t\t<VBox class=\"textArea\">\n\t\t\t\t<Label text=\"{i18n>InvitesLabel}\"/>\n\t\t\t\t<TextArea id=\"mailTxtArea\" rows=\"8\" cols=\"45\" value=\"{eventModel>/Mails}\" required=\"true\" placeholder=\"{i18n>MailTextArea}\" ></TextArea>\n\t\t\t\t<CheckBox id=\"mailsCheckBox\" text=\"MHP Romania\" selected=\"false\" select=\"onSelect\"/>\n\t\t\t</VBox>\n\t\t</items>\n\t</FlexBox>\n</core:FragmentDefinition>",
		"eventManagementEVA/view/EventDetails.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"eventManagementEVA.controller.EventDetails\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:f=\"sap.ui.layout.form\">\n\t<Page>\n\t\t<customHeader class=\"headerContent\">\n\t\t\t<Toolbar>\n\t\t\t\t<Button type=\"Back\" press=\"onNavBack\"/>\n\t\t\t\t<Image src=\"/webapp/resources/mhplogo.jpg\" height=\"4.5em\" width=\"9em\" densityAware=\"true\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<Label id=\"nameLabel\"></Label>\n\t\t\t\t<MenuButton icon=\"sap-icon://action-settings\" type=\"Accept\" defaultAction=\"onDefaultActionAccept\" useDefaultActionOnly=\"true\">\n\t\t\t\t\t<menu>\n\t\t\t\t\t\t<Menu itemSelected=\"onMenuAction\">\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<MenuItem text=\"Change Password\" icon=\"sap-icon://private\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t</menu>\n\t\t\t\t</MenuButton>\n\t\t\t</Toolbar>\n\t\t</customHeader>\n\t\t<FlexBox justifyContent=\"Center\">\n\t\t\t<Image class=\"eventImage\" src=\"/destinations/M38/sap/opu/odata/sap/ZTEAM2_SRV/EPictureSet('{IdEvent}')/$value\" densityAware=\"false\"/>\n\t\t</FlexBox>\n\t\t<HBox class=\"sapUiMediumMargin\" wrap=\"Wrap\" justifyContent=\"SpaceAround\">\n\t\t\t<f:SimpleForm editable=\"true\" layout=\"ResponsiveGridLayout\" width=\"26rem\" labelSpanXL=\"1\" labelSpanL=\"1\" labelSpanM=\"2\" labelSpanS=\"4\"\n\t\t\t\tadjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"2\" columnsL=\"2\" columnsM=\"1\"\n\t\t\t\tsingleContainerFullSize=\"false\">\n\t\t\t\t<f:content>\n\t\t\t\t\t<Label text=\"{i18n>TitleLabel}\"/>\n\t\t\t\t\t<Input id=\"Title\" editable=\"{switchStateModel>/Editable}\" value=\"{Title}\"></Input>\n\t\t\t\t\t<Label text=\"{i18n>LocationLabel}\"/>\n\t\t\t\t\t<Input id=\"Location\" editable=\"{switchStateModel>/Editable}\" value=\"{Location}\"></Input>\n\t\t\t\t\t<Button id=\"bntSearch\" text=\"{i18n>Search}\" press=\"actSearch\" visible=\"{switchStateModel>/Visible}\"/>\n\t\t\t\t\t<Label text=\"Latitude\"/>\n\t\t\t\t\t<Input id=\"Latitude\" editable=\"{switchStateModel>/Editable}\" value=\"{Latitude}\" visible=\"false\"></Input>\n\t\t\t\t\t<Label text=\"Longitude\"/>\n\t\t\t\t\t<Input id=\"Longitude\" editable=\"{switchStateModel>/Editable}\" value=\"{Longitude}\" visible=\"false\"></Input>\n\t\t\t\t\t<Label text=\"{i18n>DateLabel}\"/>\n\t\t\t\t\t<DatePicker id=\"Date\" required=\"true\" editable=\"{switchStateModel>/Editable}\"\n\t\t\t\t\t\tvalue=\"{path:'Data', type:'sap.ui.model.type.Date', formatOptions: {pattern: 'YYYY-MM-dd'}}\"/>\n\t\t\t\t\t<!--value=\"{path:'Data', type:'sap.ui.model.type.DateTime', formatOptions: {pattern: 'YYYY-MM-ddThh:mm:ss'}}\"/>-->\n\t\t\t\t\t<!--<Input id=\"eDataInput\" width=\"35rem\" editable=\"false\"-->\n\t\t\t\t\t<!--\tvalue=\"{ path: 'Data', type: 'sap.ui.model.type.Date', formatOptions: { style: 'medium' } }\"></Input>-->\n\t\t\t\t\t<Label text=\"{i18n>TimeLabel}\"/>\n\t\t\t\t\t<Input id=\"Time\" required=\"true\" placeholder=\"HH:mm - HH:mm\" value=\"{Time}\" editable=\"{switchStateModel>/Editable}\"/>\n\t\t\t\t\t<Label text=\"{i18n>DresscodeLabel}\"/>\n\t\t\t\t\t<Input id=\"Dresscode\" editable=\"{switchStateModel>/Editable}\" value=\"{Dresscode}\"/>\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\t\t\t<VBox class=\"mapBox\">\n\t\t\t\t<FlexBox id=\"map_canvas\" width=\"25em\" height=\"15em\"/>\n\t\t\t\t<FlexBox id=\"questionBox\" items=\"{toQuestion}\" alignItems=\"Center\" justifyContent=\"Start\" wrap=\"Wrap\">\n\t\t\t\t\t<HBox class=\"sapUiMediumMargin\" justifyContent=\"Center\">\n\t\t\t\t\t\t<Label text=\"{QuestionText}\"/>\n\t\t\t\t\t\t<Select id=\"answerSelect\" forceSelection=\"false\" change=\"onSelectChange\" items=\"{toPAnswer}\">\n\t\t\t\t\t\t\t<core:Item key=\"{AnswerText}\" text=\"{AnswerText}\"/>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</HBox>\n\t\t\t\t</FlexBox>\n\t\t\t</VBox>\n\t\t</HBox>\n\t\t<!--<core:Fragment fragmentName=\"eventManagementEVA.view.qList\" type=\"XML\"/>-->\n\t\t<footer>\n\t\t\t<Toolbar>\n\t\t\t\t<Label id=\"createdBy\" text=\"Event created by {CreatedBy}.\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<Button id=\"eventUpdate\" text=\"{i18n>UpdateButton}\" press=\"onUpdatePress\" enabled=\"false\"></Button>\n\t\t\t\t<Button id=\"acceptBtn\" class=\"AcceptBtn\" type=\"Accept\" text=\"{i18n>acceptBtnText}\" icon=\"sap-icon://accept\" width=\"7rem\" press=\"onAcceptTap\"></Button>\n\t\t\t\t<Button id=\"declineBtn\" class=\"DeclineBtn\" type=\"Reject\" text=\"{i18n>declineBtnText}\" icon=\"sap-icon://decline\" width=\"7rem\" press=\"onDeclineTap\"></Button>\n\t\t\t\t<!--<Button id=\"confirmAnswersBtn\" class=\"confirmBtn\" width=\"10em\" text=\"{i18n>confirmBtnText}\" type=\"Transparent\" press=\"onConfirmTap\"/>-->\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<Switch id=\"switchBtn\" customTextOn=\"{i18n>SwitchView}\" customTextOff=\"{i18n>SwitchEdit}\" state=\"false\" change=\"onSwitchEditMode\"/>\n\t\t\t</Toolbar>\n\t\t</footer>\n\t</Page>\n</mvc:View>",
		"eventManagementEVA/view/App.view.xml": "<mvc:View controllerName=\"eventManagementEVA.controller.App\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\"\n\tdisplayBlock=\"true\" xmlns=\"sap.m\">\n\t<App id=\"appControl\">\n\t\t<pages>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"eventManagementEVA/view/EventCreate.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:u=\"sap.ui.unified\" xmlns:l=\"sap.ui.layout\"\n\tcontrollerName=\"eventManagementEVA.controller.EventCreate\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:f=\"sap.ui.layout.form\">\n\t<Page title=\"{i18n>EventCreateTitle}\">\n\t\t<customHeader class=\"headerContent\">\n\t\t\t<Toolbar>\n\t\t\t\t<Button type=\"Back\" press=\"onNavBack\"/>\n\t\t\t\t<Image src=\"/webapp/resources/mhplogo.jpg\" height=\"4.5em\" width=\"9em\" densityAware=\"true\"></Image>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<Label id=\"nameLabel\"></Label>\n\t\t\t\t<MenuButton icon=\"sap-icon://action-settings\" type=\"Accept\" defaultAction=\"onDefaultActionAccept\" useDefaultActionOnly=\"true\">\n\t\t\t\t\t<menu>\n\t\t\t\t\t\t<Menu itemSelected=\"onMenuAction\">\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<MenuItem text=\"Change Password\" icon=\"sap-icon://private\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t</menu>\n\t\t\t\t</MenuButton>\n\t\t\t</Toolbar>\n\t\t</customHeader>\n\t\t<content>\n\t\t\t<Panel headerText=\"{i18n>EventCreateSubTitle}\">\n\n\t\t\t\t<HBox class=\"sapUiLargeMargin\" wrap=\"Wrap\" justifyContent=\"Start\">\n\t\t\t\t\t<f:SimpleForm layout=\"GridLayout\" class=\"sapUiLargeMarginEnd sapUiSmallMarginTop\" minWidth=\"25rem\" width=\"40em\" labelMinWidth=\"3.5em\"\n\t\t\t\t\t\tlabelSpanXL=\"1\" labelSpanL=\"1\" labelSpanM=\"1\" labelSpanS=\"1\" adjustLabelSpan=\"false\" emptySpanXL=\"2\" emptySpanL=\"2\" emptySpanM=\"2\"\n\t\t\t\t\t\temptySpanS=\"0\" columnsXL=\"2\" columnsL=\"2\" columnsM=\"1\" singleContainerFullSize=\"false\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<Label text=\"{i18n>TitleLabel}\" required=\"true\" labelFor=\"Title\"/>\n\t\t\t\t\t\t\t<Input id=\"Title\" value=\"{eventModel>/Title}\"/>\n\t\t\t\t\t\t\t<Label text=\"{i18n>LocationLabel}\" required=\"true\"/>\n\t\t\t\t\t\t\t<Input id=\"Location\" value=\"{eventModel>/Location}\"/>\n\t\t\t\t\t\t\t<Button id=\"bntSearch\" text=\"{i18n>SearchButton}\" press=\"actSearch\"/>\n\t\t\t\t\t\t\t<Label text=\"Latitude\"/>\n\t\t\t\t\t\t\t<Input id=\"Latitude\" visible=\"false\" value=\"{eventModel>/Latitude}\" required=\"true\"/>\n\t\t\t\t\t\t\t<Label text=\"Longitude\"/>\n\t\t\t\t\t\t\t<Input id=\"Longitude\" visible=\"false\" value=\"{eventModel>/Longitude}\" required=\"true\"/>\n\t\t\t\t\t\t\t<Label text=\"{i18n>DateLabel}\"/>\n\t\t\t\t\t\t\t<DatePicker id=\"Date\" required=\"true\" valueFormat=\"yyyy-MM-ddThh:mm:ss\" displayFormat=\"yyyy-MM-dd\" value=\"{eventModel>/Data}\"/>\n\t\t\t\t\t\t\t<!--value=\"{path:'Data', type:'sap.ui.model.type.DateTime', formatOptions: { style: 'short'}}\"/>-->\n\t\t\t\t\t\t\t<!--<Input id=\"eDataInput\" width=\"35rem\" editable=\"false\"-->\n\t\t\t\t\t\t\t<!--\tvalue=\"{ path: 'Data', type: 'sap.ui.model.type.Date', formatOptions: { style: 'medium' } }\"></Input>-->\n\t\t\t\t\t\t\t<Label text=\"{i18n>TimeLabel}\"/>\n\t\t\t\t\t\t\t<Input id=\"Time\" required=\"true\" placeholder=\"HH:mm - HH:mm\" value=\"{eventModel>/Time}\"/>\n\t\t\t\t\t\t\t<Label text=\"{i18n>DresscodeLabel}\"/>\n\t\t\t\t\t\t\t<Input id=\"Dresscode\" required=\"true\" value=\"{eventModel>/Dresscode}\"/>\n\t\t\t\t\t\t\t<Label text=\"{i18n>PictureLabel}\"/>\n\t\t\t\t\t\t\t<u:FileUploader id=\"oFileUploader\" name=\"myFileUpload\" tooltip=\"Upload image for the event\" uploadComplete=\"handleUploadComplete\"/>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t\t<FlexBox class=\"sapUiLargeMarginBegin sapUiSmallMarginTop\" id=\"map_canvas\" width=\"25em\" height=\"20em\"/>\n\t\t\t\t</HBox>\n\n\t\t</Panel>\n\t\t\t\n\t\t<HBox>\n\t\t\t<VBox class=\"sapUiLargeMarginBeginEnd\" justifyContent=\"Center\" alignItems=\"Center\">\n\t\t\t\t<core:Fragment fragmentName=\"eventManagementEVA.view.qCreate\" type=\"XML\"/>\n\t\t\t\t<Button text=\"{i18n>AddQuestion}\" icon=\"sap-icon://add\" press=\"addQuestionPress\"/>\n\t\t\t</VBox>\n\t\t\t<core:Fragment class=\"questionList\" fragmentName=\"eventManagementEVA.view.qList\" type=\"XML\"/>\n\t\t\t\n\t\t</HBox>\n\t\t<VBox>\n\t\t\t\t<core:Fragment fragmentName=\"eventManagementEVA.view.mailTextArea\" type=\"XML\"/>\n\t\t\t</VBox>\n\t</content>\n\t<footer>\n\t\t<Toolbar>\n\t\t\t<ToolbarSpacer/>\n\t\t\t<Button id=\"EventCreate\" text=\"{i18n>CreateEventBtn}\" press=\"onCreate\"></Button>\n\t\t</Toolbar>\n\t</footer>\n</Page>\n</mvc:View>",
		"eventManagementEVA/view/Login.view.xml": "<mvc:View class=\"loginView\" xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\tcontrollerName=\"eventManagementEVA.controller.Login\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<Page title=\"{i18n>loginTitle}\" class=\"LoginBack\">\n\t\t<customHeader>\n\t\t\t<Toolbar>\n\t\t\t\t<Image src=\"/webapp/resources/mhplogo.jpg\" height=\"4.5em\" width=\"9em\" densityAware=\"true\"></Image>\n\t\t\t\t<Label text=\"{i18n>LoginPageHeaderLabel}\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<Switch customTextOn=\"en\" customTextOff=\"de\" state=\"false\" change=\"onSwitchEditMode\"></Switch>\n\t\t\t\t<MenuButton icon=\"sap-icon://action-settings\" type=\"Accept\" defaultAction=\"onDefaultActionAccept\" useDefaultActionOnly=\"true\">\n\t\t\t\t\t<menu>\n\t\t\t\t\t\t<Menu itemSelected=\"onMenuAction\">\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<MenuItem id=\"changePasswordItem\" text=\"{i18n>ChangePassword}\" icon=\"sap-icon://private\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t</menu>\n\t\t\t\t</MenuButton>\n\t\t\t</Toolbar>\n\t\t</customHeader>\n\t\t<content>\n\t\t\t<VBox class=\"loginBox\" fitContainer=\"true\" justifyContent=\"Center\" alignItems=\"Center\" alignContent=\"Center\">\n\t\t\t\t<items>\n\t\t\t\t\t<!--<Label text=\"Welcome\" class=\"fontStyle sapUiSmallMarginBottom sapThemeLightText\"/>-->\n\t\t\t\t\t<!--<Label text=\"Please login: \" class=\"fontStyle sapThemeLightText\"/>-->\n\t\t\t\t\t<Input id=\"uid\" placeholder=\"{i18n>IDPlaceHolder}\"></Input>\n\t\t\t\t\t<Input id=\"pasw\" placeholder=\"{i18n>PassPlaceHolder}\" type=\"Password\" submit=\"onLoginTap\"></Input>\n\t\t\t\t\t<Button class=\"loginBtn\" icon=\"sap-icon://visits\" width=\"10em\" type=\"Unstyled\" press=\"onLoginTap\"></Button>\n\t\t\t\t</items>\n\t\t\t</VBox>\n\t\t</content>\n\t\t<footer ></footer>\n\t</Page>\n</mvc:View>",
		"eventManagementEVA/view/qList.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<Panel id=\"qDisplayPanel\">\n\t\t<HBox id=\"selectDisplay\" wrap=\"Wrap\" class=\"sapUiMediumMarginBeginEnd\" justifyContent=\"Center\">\n\n\t\t</HBox>\n\t</Panel>\n</core:FragmentDefinition>",
		"eventManagementEVA/model/formatter.js": "sap.ui.define([], function() {\r\n\t\"use strict\";\r\n\treturn {\r\n\t\tcalculateDaysRemaining: function(eventDate) {\r\n\t\t\tvar todayDate = new Date();\r\n\t\t\ttodayDate.setHours(0,0,0,0);\r\n\t\t\teventDate.setHours(0,0,0,0);\r\n\t\t\tvar diff = eventDate.getTime() - todayDate.getTime();\r\n\t\t\tif (diff >= 0) {\r\n\t\t\t\tvar daysRemaining = parseInt(diff / (1000 * 60 * 60 * 24));\r\n\t\t\t\tif (daysRemaining === 0) {\r\n\t\t\t\t\treturn \", Today!\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn \", \" + daysRemaining + \" days left!\";\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn \", Expired\";\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n});",
		"eventManagementEVA/controller/App.controller.js": "sap.ui.define([\r\n\t\"eventManagementEVA/controller/BaseController\"\r\n], function(BaseController) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"eventManagementEVA.controller.App\", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf eventManagementEVA.view.view.Login\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf eventManagementEVA.view.view.Login\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf eventManagementEVA.view.view.Login\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf eventManagementEVA.view.view.Login\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\t\tonLoginTap: function() {\r\n\t\t\tvar uid = this.getView().byId(\"uid\").getValue();\r\n\t\t\tvar pasw = this.getView().byId(\"pasw\").getValue();\r\n\t\t\tsap.m.MessageToast.show(\"User Id: \" + uid + \" Password: \" + pasw);\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"eventManagementEVA/model/models.js": "sap.ui.define([\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/Device\"\r\n], function(JSONModel, Device) {\r\n\t\"use strict\";\r\n\t\r\n\treturn {\r\n\t\t\r\n\t\tcreateDeviceModel: function() {\r\n\t\t\tvar oModel = new JSONModel(Device);\r\n\t\t\toModel.setDefaultBindingMode(\"TwoWay\");\r\n\t\t\treturn oModel;\r\n\t\t}\r\n\t};\r\n});"
	}
});